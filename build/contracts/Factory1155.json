{
  "contractName": "Factory1155",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contractMetadata",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "createOnec1155",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contractMetadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"createOnec1155\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Onec1155Factory.sol\":\"Factory1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dd39ae44599da9e6b59035de3cddcfaa8d7b2a45f1c887adf5a1e38315cf6cd\",\"dweb:/ipfs/QmcFVkc7m3MzxoiCWCb2yZuezqW7eQTEvnScNALXhdsyJu\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe9fa1beb63e4a09637701f783982ba80380d630d600c9cafe26b68bf58be1b2\",\"dweb:/ipfs/QmRA3GXhTWys88joD9x8xYhdjzvGwmDGLMMzGw3LxbSEge\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x742c0fbab73bf595ca40025f6e81cb48dbd5e133950717f7befd062a925c0148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://104b5ce52aba5c5f57735005b5869e8c97232a9ac6a37a8dcdf8dc38e17ea5aa\",\"dweb:/ipfs/QmRdWh7R1oYzZMAAwwGUu8Sw18ChMAyCXD513RidThvjuZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0xf59a504a9f476c67ab4adbbcefc32e8a93f5092fdb5f6f1c51ed876ce030004b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec5d5eb774cca29d27ddaaac6b0c94824fa2f18650c08299c9b725ea247c89\",\"dweb:/ipfs/QmPwvnSeifhX3SGdb19gBLereeE2MvF8gfMP7ryeYF1JfC\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xdf3a49167ee6c6ba60205aa5eefe29d3ff340b73d7326733eb53f440371b717e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e023fd611ae144af36353d4b469c0b335965e2929e7af71e7c8bb80e835f36b\",\"dweb:/ipfs/QmZhnaiySY441d9HFCArqUbSY6Wg5s6JnjCEG4y2gxKjqR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0x06971bd1720c85e4771b94c83eb1e058af6070f6f6306ebc874a11501b238b8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c2900c52a800da1244c3a1cc0e946aa5729a3e8171dfd633c7e4686a7bc3e6e\",\"dweb:/ipfs/QmWww9SeRVZZgoc8FZRjqxruUTqjqu1yg2Va6EHbKJeVs7\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x6d0b5e3282b9f7683eb822a01bd5351d01bd9225cd8153e366c9a54e89213165\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://180ac522b70db433d333f1e3998c9ad334d755bfa009ad7d08021bb446f28819\",\"dweb:/ipfs/QmT34uLFrzTEpDgm1SVrFibWcGTBdg8DbSKGNUH7vMRgVi\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x946f08c0a132c5877d458d7af7956da60607f20a5c03dd75760708c848aae6b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b80d20ed113ad0be486d489e1cc2f0f4006b7893e579c2156e8c434d8eec382\",\"dweb:/ipfs/QmdB8QGghkRGcSkp4xAWCvohGgYXFU9ncMx82XSqDMiZJf\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x062b5a0f7cc6b0528fa350033759f3a15ba42afb57423d7c593753860f2c82e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3c8b4ec819fc9648ef5ae6b8edc474b2a631389fa73add4c4545e1918abe034\",\"dweb:/ipfs/Qmc8GzvTtCxR3mg3QuLRzycSMfsSjjZPyPALmLBjMxSGv6\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x17c9c5d2d6b56527215ee7b3da6dde66b6f23f1b3d5c66cc436e753ef349a97a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd7c775bc6000f44c048796b5e013dbb3ec7592986bc289868b19ff9439ee31d\",\"dweb:/ipfs/QmSuBfTT9z9sEpmEcGihEc5DJGsXery8QyyuNfvub875ej\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c2746f8ebb4bfb6b8e8a768296c7f85f11b36f4873daabb91933c3602f00590\",\"dweb:/ipfs/QmdumDez8WEdk9FDuP7Jp5pDSJiQeFtFSJw3B5CEHJL4KU\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x1cc0efb01cbf008b768fd7b334786a6e358809198bb7e67f1c530af4957c6a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af407aa35f7602a9047a27803bfd98c372479474f77f7aaf833166bdd952f2fd\",\"dweb:/ipfs/QmZgo1P3RM4Gn5CJKkNRn3tQDHotWPw9H7p7vC1hm4XkZv\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Onec1155.sol\":{\"keccak256\":\"0xc3a47d7d2b359304e424686194408df2f32ea4a15e309cdebecc15530ff796cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5ab50176cbb701afdfd72fbdf896a4c8fc752e7a08dfe3c9273bbc24785abf1\",\"dweb:/ipfs/QmSyMXj5A8fTL38YhUoP16cm3Z7kWL1CUb6pihdMF3vcej\"]},\"project:/contracts/Onec1155Factory.sol\":{\"keccak256\":\"0xc5ecd6c4f4f7298596f843c89007f8ef1628608aa6b6c55a0aab87da67762099\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e202c03873d89baf7e0a6b2b08e59827a0cd63197502520afbb6baf8e9ce9744\",\"dweb:/ipfs/QmfF7zH5CG6smtTKKTsyecuNe5czVt8Qw8SzZBgVrqX9Fc\"]},\"project:/contracts/strings.sol\":{\"keccak256\":\"0x2325c7d24b3db927c3505003419822f4f5b0fd540934409efb54d518941438f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://489ac42f9780620e5f09c1262375de5d386935ad093a3291c3086556c989b96b\",\"dweb:/ipfs/QmYdaikkV76LtLXxCsZE7NVmuvA9Bi72KWU89cc2oh5yih\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261009b60201b60201c565b6100a360201b60201c565b60405161003990610167565b604051809103906000f080158015610055573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610174565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6156b380610c4a83390190565b610ac7806101836000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780637b630e011461005b5780638da5cb5b1461008b578063f2fde38b146100a9575b600080fd5b6100596100c5565b005b610075600480360381019061007091906106ea565b61014d565b6040516100829190610897565b60405180910390f35b610093610382565b6040516100a09190610897565b60405180910390f35b6100c360048036038101906100be91906106c1565b6103ab565b005b6100cd6104a3565b73ffffffffffffffffffffffffffffffffffffffff166100eb610382565b73ffffffffffffffffffffffffffffffffffffffff1614610141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013890610929565b60405180910390fd5b61014b60006104ab565b565b60006101576104a3565b73ffffffffffffffffffffffffffffffffffffffff16610175610382565b73ffffffffffffffffffffffffffffffffffffffff16146101cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c290610929565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561020557600080fd5b6000610232600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661056f565b90508073ffffffffffffffffffffffffffffffffffffffff16634cd88b7686866040518363ffffffff1660e01b815260040161026f9291906108b2565b600060405180830381600087803b15801561028957600080fd5b505af115801561029d573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b846040518263ffffffff1660e01b81526004016102da9190610897565b600060405180830381600087803b1580156102f457600080fd5b505af1158015610308573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16639435a587846040518263ffffffff1660e01b81526004016103459190610897565b600060405180830381600087803b15801561035f57600080fd5b505af1158015610373573d6000803e3d6000fd5b50505050809150509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103b36104a3565b73ffffffffffffffffffffffffffffffffffffffff166103d1610382565b73ffffffffffffffffffffffffffffffffffffffff1614610427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041e90610929565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e906108e9565b60405180910390fd5b6104a0816104ab565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063690610909565b60405180910390fd5b919050565b60006106576106528461097a565b610949565b90508281526020810184848401111561066f57600080fd5b61067a8482856109f8565b509392505050565b60008135905061069181610a7a565b92915050565b600082601f8301126106a857600080fd5b81356106b8848260208601610644565b91505092915050565b6000602082840312156106d357600080fd5b60006106e184828501610682565b91505092915050565b6000806000606084860312156106ff57600080fd5b600084013567ffffffffffffffff81111561071957600080fd5b61072586828701610697565b935050602084013567ffffffffffffffff81111561074257600080fd5b61074e86828701610697565b925050604061075f86828701610682565b9150509250925092565b610772816109c6565b82525050565b6000610783826109aa565b61078d81856109b5565b935061079d818560208601610a07565b6107a681610a69565b840191505092915050565b60006107be6026836109b5565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006108246016836109b5565b91507f455243313136373a20637265617465206661696c6564000000000000000000006000830152602082019050919050565b60006108646020836109b5565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506108ac6000830184610769565b92915050565b600060408201905081810360008301526108cc8185610778565b905081810360208301526108e08184610778565b90509392505050565b60006020820190508181036000830152610902816107b1565b9050919050565b6000602082019050818103600083015261092281610817565b9050919050565b6000602082019050818103600083015261094281610857565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156109705761096f610a3a565b5b8060405250919050565b600067ffffffffffffffff82111561099557610994610a3a565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006109d1826109d8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610a25578082015181840152602081019050610a0a565b83811115610a34576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610a83816109c6565b8114610a8e57600080fd5b5056fea26469706673582212208ca39ae7a361ca903e5a99fccbf5cd05a86477224e3373cc79a88281bdca39b164736f6c63430008000033608060405234801561001057600080fd5b5061569280620000216000396000f3fe608060405234801561001057600080fd5b50600436106101fa5760003560e01c8063837c59621161011a578063c92c9f14116100ad578063e985e9c51161007c578063e985e9c514610595578063f102ffe5146105c5578063f242432a146105e1578063f2fde38b146105fd578063fce5503714610619576101fa565b8063c92c9f1414610521578063cef8cb871461053d578063db9b71701461055b578063e8a3d48514610577576101fa565b8063a22cb465116100e9578063a22cb465146104af578063a389783e146104cb578063a90205a3146104fb578063b2cf2f1614610505576101fa565b8063837c59621461043b57806386838fb61461046b5780638da5cb5b146104755780639435a58714610493576101fa565b80634cd88b76116101925780635c975abb116101615780635c975abb146103c75780636877444f146103e5578063715018a614610401578063733763981461040b576101fa565b80634cd88b76146103435780634e1273f41461035f5780635374cf781461038f57806355f804b3146103ab576101fa565b80631cc509fd116101ce5780631cc509fd146102ab5780632b04e840146102c75780632eb2c2d6146102f75780633cfc7ae214610313576101fa565b8062fdd58e146101ff57806301ffc9a71461022f5780630e89341c1461025f578063127217d61461028f575b600080fd5b610219600480360381019061021491906141a2565b610635565b604051610226919061517a565b60405180910390f35b61024960048036038101906102449190614299565b6106ff565b6040516102569190614e9d565b60405180910390f35b61027960048036038101906102749190614398565b6107e1565b6040516102869190614eb8565b60405180910390f35b6102a960048036038101906102a491906140d7565b610863565b005b6102c560048036038101906102c091906141de565b610877565b005b6102e160048036038101906102dc91906141a2565b610960565b6040516102ee919061517a565b60405180910390f35b610311600480360381019061030c9190614018565b610974565b005b61032d60048036038101906103289190614398565b610a15565b60405161033a9190614e44565b60405180910390f35b61035d6004803603810190610358919061432c565b610a80565b005b6103796004803603810190610374919061422d565b610b93565b6040516103869190614e44565b60405180910390f35b6103a960048036038101906103a491906143c1565b610d44565b005b6103c560048036038101906103c091906142eb565b610deb565b005b6103cf610e73565b6040516103dc9190614e9d565b60405180910390f35b6103ff60048036038101906103fa9190614428565b610e8a565b005b610409610fb2565b005b61042560048036038101906104209190614398565b61103a565b6040516104329190614eb8565b60405180910390f35b61045560048036038101906104509190614398565b61104c565b6040516104629190614eb8565b60405180910390f35b6104736110f1565b005b61047d611177565b60405161048a9190614d67565b60405180910390f35b6104ad60048036038101906104a89190613f8a565b6111a1565b005b6104c960048036038101906104c49190614166565b61127b565b005b6104e560048036038101906104e09190613fdc565b6113fc565b6040516104f29190614e9d565b60405180910390f35b610503611410565b005b61051f600480360381019061051a9190614018565b611496565b005b61053b60048036038101906105369190614428565b6114aa565b005b61054561179b565b604051610552919061517a565b60405180910390f35b61057560048036038101906105709190614166565b6117a5565b005b61057f61182f565b60405161058c9190614eb8565b60405180910390f35b6105af60048036038101906105aa9190613fdc565b6118c1565b6040516105bc9190614e9d565b60405180910390f35b6105df60048036038101906105da91906143c1565b611955565b005b6105fb60048036038101906105f691906140d7565b611b9d565b005b61061760048036038101906106129190613f8a565b611c3e565b005b610633600480360381019061062e91906142eb565b611d36565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069d90614f5a565b60405180910390fd5b60c9600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806107ca57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806107da57506107d982611dcc565b5b9050919050565b60606107eb61179b565b82111561082d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082490614ffa565b60405180910390fd5b60006108388361103a565b905060006108458461104c565b905061085a8183611e3690919063ffffffff16565b92505050919050565b6108708585858585611b9d565b5050505050565b61087f61208f565b73ffffffffffffffffffffffffffffffffffffffff1661089d611177565b73ffffffffffffffffffffffffffffffffffffffff16146108f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ea906150da565b60405180910390fd5b6108fe838383612097565b6040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525060fc6000848152602001908152602001600020908051906020019061095a929190613be7565b50505050565b600061096c8383610635565b905092915050565b61097c61208f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806109c257506109c1856109bc61208f565b6118c1565b5b610a01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f89061505a565b60405180910390fd5b610a0e85858585856122b6565b5050505050565b606060fd6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610a7457602002820191906000526020600020905b815481526020019060010190808311610a60575b50505050509050919050565b600060019054906101000a900460ff1680610aa6575060008054906101000a900460ff16155b610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc9061507a565b60405180910390fd5b60008060019054906101000a900460ff161590508015610b35576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610b3e83612619565b610b4661270c565b610b4e6127f5565b600060fb819055508160fe9080519060200190610b6c929190613c6d565b508015610b8e5760008060016101000a81548160ff0219169083151502179055505b505050565b60608151835114610bd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd09061511a565b60405180910390fd5b6000835167ffffffffffffffff811115610c1c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610c4a5781602001602082028036833780820191505090505b50905060005b8451811015610d3957610ce3858281518110610c95577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151858381518110610cd6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610635565b828281518110610d1c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080610d3290615456565b9050610c50565b508091505092915050565b610d4c61208f565b73ffffffffffffffffffffffffffffffffffffffff16610d6a611177565b73ffffffffffffffffffffffffffffffffffffffff1614610dc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db7906150da565b60405180910390fd5b610dce8260fb5485846128de565b60fb6000815480929190610de190615456565b9190505550505050565b610df361208f565b73ffffffffffffffffffffffffffffffffffffffff16610e11611177565b73ffffffffffffffffffffffffffffffffffffffff1614610e67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5e906150da565b60405180910390fd5b610e7081612a75565b50565b6000603360009054906101000a900460ff16905090565b610e9261208f565b73ffffffffffffffffffffffffffffffffffffffff16610eb0611177565b73ffffffffffffffffffffffffffffffffffffffff1614610f06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efd906150da565b60405180910390fd5b60fb548110610f4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4190614f1a565b60405180910390fd5b610f588360fb5486856128de565b60fd600082815260200190815260200160002060fb54908060018154018082558091505060019003906000526020600020016000909190919091505560fb6000815480929190610fa790615456565b919050555050505050565b610fba61208f565b73ffffffffffffffffffffffffffffffffffffffff16610fd8611177565b73ffffffffffffffffffffffffffffffffffffffff161461102e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611025906150da565b60405180910390fd5b6110386000612a8f565b565b606061104582612b55565b9050919050565b606060fc6000838152602001908152602001600020805461106c90615424565b80601f016020809104026020016040519081016040528092919081815260200182805461109890615424565b80156110e55780601f106110ba576101008083540402835291602001916110e5565b820191906000526020600020905b8154815290600101906020018083116110c857829003601f168201915b50505050509050919050565b6110f961208f565b73ffffffffffffffffffffffffffffffffffffffff16611117611177565b73ffffffffffffffffffffffffffffffffffffffff161461116d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611164906150da565b60405180910390fd5b611175612be9565b565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111e757600080fd5b505afa1580156111fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121f9190613fb3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f2b9e5d76382db4489c92cddfddcc312fd6a663ff0bffac3bd5d79ca62028af5e60405160405180910390a350565b8173ffffffffffffffffffffffffffffffffffffffff1661129a61208f565b73ffffffffffffffffffffffffffffffffffffffff1614156112f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e8906150fa565b60405180910390fd5b8060ca60006112fe61208f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166113ab61208f565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113f09190614e9d565b60405180910390a35050565b600061140883836118c1565b905092915050565b61141861208f565b73ffffffffffffffffffffffffffffffffffffffff16611436611177565b73ffffffffffffffffffffffffffffffffffffffff161461148c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611483906150da565b60405180910390fd5b611494612c8b565b565b6114a38585858585610974565b5050505050565b6114b261208f565b73ffffffffffffffffffffffffffffffffffffffff166114d0611177565b73ffffffffffffffffffffffffffffffffffffffff1614611526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151d906150da565b60405180910390fd5b60fb54811061153457600080fd5b60008467ffffffffffffffff811115611576577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156115a45781602001602082028036833780820191505090505b50905060008567ffffffffffffffff8111156115e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156116175781602001602082028036833780820191505090505b50905060005b868110156116d2578060fb546116339190615318565b83828151811061166c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505060018282815181106116b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080806116ca90615456565b91505061161d565b506116df85838387612d2e565b815160fb60008282546116f29190615318565b9250508190555060005b82518110156117925760fd6000858152602001908152602001600020838281518110611751577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190915055808061178a90615456565b9150506116fc565b50505050505050565b600060fb54905090565b6117ad61208f565b73ffffffffffffffffffffffffffffffffffffffff166117cb611177565b73ffffffffffffffffffffffffffffffffffffffff1614611821576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611818906150da565b60405180910390fd5b61182b828261127b565b5050565b606060fe805461183e90615424565b80601f016020809104026020016040519081016040528092919081815260200182805461186a90615424565b80156118b75780601f1061188c576101008083540402835291602001916118b7565b820191906000526020600020905b81548152906001019060200180831161189a57829003601f168201915b5050505050905090565b600060ca60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61195d61208f565b73ffffffffffffffffffffffffffffffffffffffff1661197b611177565b73ffffffffffffffffffffffffffffffffffffffff16146119d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c8906150da565b60405180910390fd5b60008367ffffffffffffffff811115611a13577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611a415781602001602082028036833780820191505090505b50905060008467ffffffffffffffff811115611a86577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611ab45781602001602082028036833780820191505090505b50905060005b85811015611b6f578060fb54611ad09190615318565b838281518110611b09577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250506001828281518110611b50577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508080611b6790615456565b915050611aba565b50611b7c84838386612d2e565b815160fb6000828254611b8f9190615318565b925050819055505050505050565b611ba561208f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480611beb5750611bea85611be561208f565b6118c1565b5b611c2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2190614fda565b60405180910390fd5b611c378585858585612f99565b5050505050565b611c4661208f565b73ffffffffffffffffffffffffffffffffffffffff16611c64611177565b73ffffffffffffffffffffffffffffffffffffffff1614611cba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb1906150da565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2190614f7a565b60405180910390fd5b611d3381612a8f565b50565b611d3e61208f565b73ffffffffffffffffffffffffffffffffffffffff16611d5c611177565b73ffffffffffffffffffffffffffffffffffffffff1614611db2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611da9906150da565b60405180910390fd5b8060fe9080519060200190611dc8929190613c6d565b5050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606060008390506000839050600081518351611e529190615318565b67ffffffffffffffff811115611e91577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611ec35781602001600182028036833780820191505090505b5090506000819050600080600091505b8551821015611fa757858281518110611f15577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b838280611f2c90615456565b935081518110611f65577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508180611f9f90615456565b925050611ed3565b600091505b845182101561208057848281518110611fee577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b83828061200590615456565b93508151811061203e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350818061207890615456565b925050611fac565b82965050505050505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612107576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120fe9061509a565b60405180910390fd5b600061211161208f565b9050612141818560006121238761321e565b61212c8761321e565b604051806020016040528060008152506132e4565b600060c9600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156121d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d090614f9a565b60405180910390fd5b82810360c9600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6287876040516122a7929190615195565b60405180910390a45050505050565b81518351146122fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122f19061513a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561236a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123619061503a565b60405180910390fd5b600061237461208f565b90506123848187878787876132e4565b60005b84518110156125845760008582815181106123cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000858381518110612410577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600060c9600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156124b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124a9906150ba565b60405180910390fd5b81810360c9600085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160c9600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546125699190615318565b925050819055505050508061257d90615456565b9050612387565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516125fb929190614e66565b60405180910390a46126118187878787876133c2565b505050505050565b600060019054906101000a900460ff168061263f575060008054906101000a900460ff16155b61267e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126759061507a565b60405180910390fd5b60008060019054906101000a900460ff1615905080156126ce576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6126d6613592565b6126de61366b565b6126e782613744565b80156127085760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff1680612732575060008054906101000a900460ff16155b612771576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127689061507a565b60405180910390fd5b60008060019054906101000a900460ff1615905080156127c1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6127c9613592565b6127d1613827565b80156127f25760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061281b575060008054906101000a900460ff16155b61285a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128519061507a565b60405180910390fd5b60008060019054906101000a900460ff1615905080156128aa576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6128b2613592565b6128ba613910565b80156128db5760008060016101000a81548160ff0219169083151502179055505b50565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561294e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129459061515a565b60405180910390fd5b600061295861208f565b90506129798160008761296a8861321e565b6129738861321e565b876132e4565b8260c9600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546129d99190615318565b925050819055508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051612a57929190615195565b60405180910390a4612a6e81600087878787613a04565b5050505050565b8060cb9080519060200190612a8b929190613c6d565b5050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b606060cb8054612b6490615424565b80601f0160208091040260200160405190810160405280929190818152602001828054612b9090615424565b8015612bdd5780601f10612bb257610100808354040283529160200191612bdd565b820191906000526020600020905b815481529060010190602001808311612bc057829003601f168201915b50505050509050919050565b612bf1610e73565b612c30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c2790614f3a565b60405180910390fd5b6000603360006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa612c7461208f565b604051612c819190614d67565b60405180910390a1565b612c93610e73565b15612cd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cca9061501a565b60405180910390fd5b6001603360006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612d1761208f565b604051612d249190614d67565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415612d9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d959061515a565b60405180910390fd5b8151835114612de2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dd99061513a565b60405180910390fd5b6000612dec61208f565b9050612dfd816000878787876132e4565b60005b8451811015612f0357838181518110612e42577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160c96000878481518110612e87577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612ee99190615318565b925050819055508080612efb90615456565b915050612e00565b508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612f7b929190614e66565b60405180910390a4612f92816000878787876133c2565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415613009576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130009061503a565b60405180910390fd5b600061301361208f565b90506130338187876130248861321e565b61302d8861321e565b876132e4565b600060c9600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156130cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130c2906150ba565b60405180910390fd5b83810360c9600087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360c9600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546131829190615318565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6288886040516131ff929190615195565b60405180910390a4613215828888888888613a04565b50505050505050565b60606000600167ffffffffffffffff811115613263577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156132915781602001602082028036833780820191505090505b50905082816000815181106132cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080915050919050565b60008351905060005b81811015613370578260fc6000878481518110613333577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518152602001908152602001600020908051906020019061335c929190613be7565b50808061336890615456565b9150506132ed565b50613379610e73565b156133b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133b090614fba565b60405180910390fd5b50505050505050565b6133e18473ffffffffffffffffffffffffffffffffffffffff16613bd4565b1561358a578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401613427959493929190614d82565b602060405180830381600087803b15801561344157600080fd5b505af192505050801561347257506040513d601f19601f8201168201806040525081019061346f91906142c2565b60015b6135015761347e61554a565b8061348957506134c6565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016134bd9190614eb8565b60405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016134f890614eda565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614613588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161357f90614efa565b60405180910390fd5b505b505050505050565b600060019054906101000a900460ff16806135b8575060008054906101000a900460ff16155b6135f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135ee9061507a565b60405180910390fd5b60008060019054906101000a900460ff161590508015613647576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156136685760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680613691575060008054906101000a900460ff16155b6136d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016136c79061507a565b60405180910390fd5b60008060019054906101000a900460ff161590508015613720576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156137415760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061376a575060008054906101000a900460ff16155b6137a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016137a09061507a565b60405180910390fd5b60008060019054906101000a900460ff1615905080156137f9576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61380282612a75565b80156138235760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff168061384d575060008054906101000a900460ff16155b61388c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016138839061507a565b60405180910390fd5b60008060019054906101000a900460ff1615905080156138dc576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6138ec6138e761208f565b612a8f565b801561390d5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680613936575060008054906101000a900460ff16155b613975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161396c9061507a565b60405180910390fd5b60008060019054906101000a900460ff1615905080156139c5576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000603360006101000a81548160ff0219169083151502179055508015613a015760008060016101000a81548160ff0219169083151502179055505b50565b613a238473ffffffffffffffffffffffffffffffffffffffff16613bd4565b15613bcc578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401613a69959493929190614dea565b602060405180830381600087803b158015613a8357600080fd5b505af1925050508015613ab457506040513d601f19601f82011682018060405250810190613ab191906142c2565b60015b613b4357613ac061554a565b80613acb5750613b08565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613aff9190614eb8565b60405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613b3a90614eda565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614613bca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613bc190614efa565b60405180910390fd5b505b505050505050565b600080823b905060008111915050919050565b828054613bf390615424565b90600052602060002090601f016020900481019282613c155760008555613c5c565b82601f10613c2e57805160ff1916838001178555613c5c565b82800160010185558215613c5c579182015b82811115613c5b578251825591602001919060010190613c40565b5b509050613c699190613cf3565b5090565b828054613c7990615424565b90600052602060002090601f016020900481019282613c9b5760008555613ce2565b82601f10613cb457805160ff1916838001178555613ce2565b82800160010185558215613ce2579182015b82811115613ce1578251825591602001919060010190613cc6565b5b509050613cef9190613cf3565b5090565b5b80821115613d0c576000816000905550600101613cf4565b5090565b6000613d23613d1e846151ef565b6151be565b90508083825260208201905082856020860282011115613d4257600080fd5b60005b85811015613d725781613d588882613e64565b845260208401935060208301925050600181019050613d45565b5050509392505050565b6000613d8f613d8a8461521b565b6151be565b90508083825260208201905082856020860282011115613dae57600080fd5b60005b85811015613dde5781613dc48882613f75565b845260208401935060208301925050600181019050613db1565b5050509392505050565b6000613dfb613df684615247565b6151be565b905082815260208101848484011115613e1357600080fd5b613e1e8482856153e2565b509392505050565b6000613e39613e3484615277565b6151be565b905082815260208101848484011115613e5157600080fd5b613e5c8482856153e2565b509392505050565b600081359050613e7381615600565b92915050565b600081519050613e8881615600565b92915050565b600082601f830112613e9f57600080fd5b8135613eaf848260208601613d10565b91505092915050565b600082601f830112613ec957600080fd5b8135613ed9848260208601613d7c565b91505092915050565b600081359050613ef181615617565b92915050565b600081359050613f068161562e565b92915050565b600081519050613f1b8161562e565b92915050565b600082601f830112613f3257600080fd5b8135613f42848260208601613de8565b91505092915050565b600082601f830112613f5c57600080fd5b8135613f6c848260208601613e26565b91505092915050565b600081359050613f8481615645565b92915050565b600060208284031215613f9c57600080fd5b6000613faa84828501613e64565b91505092915050565b600060208284031215613fc557600080fd5b6000613fd384828501613e79565b91505092915050565b60008060408385031215613fef57600080fd5b6000613ffd85828601613e64565b925050602061400e85828601613e64565b9150509250929050565b600080600080600060a0868803121561403057600080fd5b600061403e88828901613e64565b955050602061404f88828901613e64565b945050604086013567ffffffffffffffff81111561406c57600080fd5b61407888828901613eb8565b935050606086013567ffffffffffffffff81111561409557600080fd5b6140a188828901613eb8565b925050608086013567ffffffffffffffff8111156140be57600080fd5b6140ca88828901613f21565b9150509295509295909350565b600080600080600060a086880312156140ef57600080fd5b60006140fd88828901613e64565b955050602061410e88828901613e64565b945050604061411f88828901613f75565b935050606061413088828901613f75565b925050608086013567ffffffffffffffff81111561414d57600080fd5b61415988828901613f21565b9150509295509295909350565b6000806040838503121561417957600080fd5b600061418785828601613e64565b925050602061419885828601613ee2565b9150509250929050565b600080604083850312156141b557600080fd5b60006141c385828601613e64565b92505060206141d485828601613f75565b9150509250929050565b6000806000606084860312156141f357600080fd5b600061420186828701613e64565b935050602061421286828701613f75565b925050604061422386828701613f75565b9150509250925092565b6000806040838503121561424057600080fd5b600083013567ffffffffffffffff81111561425a57600080fd5b61426685828601613e8e565b925050602083013567ffffffffffffffff81111561428357600080fd5b61428f85828601613eb8565b9150509250929050565b6000602082840312156142ab57600080fd5b60006142b984828501613ef7565b91505092915050565b6000602082840312156142d457600080fd5b60006142e284828501613f0c565b91505092915050565b6000602082840312156142fd57600080fd5b600082013567ffffffffffffffff81111561431757600080fd5b61432384828501613f4b565b91505092915050565b6000806040838503121561433f57600080fd5b600083013567ffffffffffffffff81111561435957600080fd5b61436585828601613f4b565b925050602083013567ffffffffffffffff81111561438257600080fd5b61438e85828601613f4b565b9150509250929050565b6000602082840312156143aa57600080fd5b60006143b884828501613f75565b91505092915050565b6000806000606084860312156143d657600080fd5b60006143e486828701613f75565b93505060206143f586828701613e64565b925050604084013567ffffffffffffffff81111561441257600080fd5b61441e86828701613f21565b9150509250925092565b6000806000806080858703121561443e57600080fd5b600061444c87828801613f75565b945050602061445d87828801613e64565b935050604085013567ffffffffffffffff81111561447a57600080fd5b61448687828801613f21565b925050606061449787828801613f75565b91505092959194509250565b60006144af8383614d49565b60208301905092915050565b6144c48161536e565b82525050565b60006144d5826152b7565b6144df81856152e5565b93506144ea836152a7565b8060005b8381101561451b57815161450288826144a3565b975061450d836152d8565b9250506001810190506144ee565b5085935050505092915050565b61453181615380565b82525050565b6000614542826152c2565b61454c81856152f6565b935061455c8185602086016153f1565b6145658161552c565b840191505092915050565b600061457b826152cd565b6145858185615307565b93506145958185602086016153f1565b61459e8161552c565b840191505092915050565b60006145b6603483615307565b91507f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008301527f526563656976657220696d706c656d656e7465720000000000000000000000006020830152604082019050919050565b600061461c602883615307565b91507f455243313135353a204552433131353552656365697665722072656a6563746560008301527f6420746f6b656e730000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614682601c83615307565b91507f506172656e7420746f6b656e206964206973206e6f742076616c6964000000006000830152602082019050919050565b60006146c2601483615307565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000614702602b83615307565b91507f455243313135353a2062616c616e636520717565727920666f7220746865207a60008301527f65726f20616464726573730000000000000000000000000000000000000000006020830152604082019050919050565b6000614768602683615307565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006147ce602483615307565b91507f455243313135353a206275726e20616d6f756e7420657863656564732062616c60008301527f616e6365000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614834602c83615307565b91507f455243313135355061757361626c653a20746f6b656e207472616e736665722060008301527f7768696c652070617573656400000000000000000000000000000000000000006020830152604082019050919050565b600061489a602983615307565b91507f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008301527f20617070726f76656400000000000000000000000000000000000000000000006020830152604082019050919050565b6000614900601783615307565b91507f237572693a204e4f4e4558495354454e545f544f4b454e0000000000000000006000830152602082019050919050565b6000614940601083615307565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b6000614980602583615307565b91507f455243313135353a207472616e7366657220746f20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006149e6603283615307565b91507f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008301527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006020830152604082019050919050565b6000614a4c602e83615307565b91507f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008301527f647920696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b6000614ab2602383615307565b91507f455243313135353a206275726e2066726f6d20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614b18602a83615307565b91507f455243313135353a20696e73756666696369656e742062616c616e636520666f60008301527f72207472616e73666572000000000000000000000000000000000000000000006020830152604082019050919050565b6000614b7e602083615307565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000614bbe602983615307565b91507f455243313135353a2073657474696e6720617070726f76616c2073746174757360008301527f20666f722073656c6600000000000000000000000000000000000000000000006020830152604082019050919050565b6000614c24602983615307565b91507f455243313135353a206163636f756e747320616e6420696473206c656e67746860008301527f206d69736d6174636800000000000000000000000000000000000000000000006020830152604082019050919050565b6000614c8a602883615307565b91507f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008301527f6d69736d617463680000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614cf0602183615307565b91507f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b614d52816153d8565b82525050565b614d61816153d8565b82525050565b6000602082019050614d7c60008301846144bb565b92915050565b600060a082019050614d9760008301886144bb565b614da460208301876144bb565b8181036040830152614db681866144ca565b90508181036060830152614dca81856144ca565b90508181036080830152614dde8184614537565b90509695505050505050565b600060a082019050614dff60008301886144bb565b614e0c60208301876144bb565b614e196040830186614d58565b614e266060830185614d58565b8181036080830152614e388184614537565b90509695505050505050565b60006020820190508181036000830152614e5e81846144ca565b905092915050565b60006040820190508181036000830152614e8081856144ca565b90508181036020830152614e9481846144ca565b90509392505050565b6000602082019050614eb26000830184614528565b92915050565b60006020820190508181036000830152614ed28184614570565b905092915050565b60006020820190508181036000830152614ef3816145a9565b9050919050565b60006020820190508181036000830152614f138161460f565b9050919050565b60006020820190508181036000830152614f3381614675565b9050919050565b60006020820190508181036000830152614f53816146b5565b9050919050565b60006020820190508181036000830152614f73816146f5565b9050919050565b60006020820190508181036000830152614f938161475b565b9050919050565b60006020820190508181036000830152614fb3816147c1565b9050919050565b60006020820190508181036000830152614fd381614827565b9050919050565b60006020820190508181036000830152614ff38161488d565b9050919050565b60006020820190508181036000830152615013816148f3565b9050919050565b6000602082019050818103600083015261503381614933565b9050919050565b6000602082019050818103600083015261505381614973565b9050919050565b60006020820190508181036000830152615073816149d9565b9050919050565b6000602082019050818103600083015261509381614a3f565b9050919050565b600060208201905081810360008301526150b381614aa5565b9050919050565b600060208201905081810360008301526150d381614b0b565b9050919050565b600060208201905081810360008301526150f381614b71565b9050919050565b6000602082019050818103600083015261511381614bb1565b9050919050565b6000602082019050818103600083015261513381614c17565b9050919050565b6000602082019050818103600083015261515381614c7d565b9050919050565b6000602082019050818103600083015261517381614ce3565b9050919050565b600060208201905061518f6000830184614d58565b92915050565b60006040820190506151aa6000830185614d58565b6151b76020830184614d58565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156151e5576151e46154fd565b5b8060405250919050565b600067ffffffffffffffff82111561520a576152096154fd565b5b602082029050602081019050919050565b600067ffffffffffffffff821115615236576152356154fd565b5b602082029050602081019050919050565b600067ffffffffffffffff821115615262576152616154fd565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115615292576152916154fd565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000615323826153d8565b915061532e836153d8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156153635761536261549f565b5b828201905092915050565b6000615379826153b8565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561540f5780820151818401526020810190506153f4565b8381111561541e576000848401525b50505050565b6000600282049050600182168061543c57607f821691505b602082108114156154505761544f6154ce565b5b50919050565b6000615461826153d8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156154945761549361549f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160e01c9050919050565b600060443d101561555a576155fd565b60046000803e61556b60005161553d565b6308c379a0811461557c57506155fd565b60405160043d036004823e80513d602482011167ffffffffffffffff821117156155a8575050506155fd565b808201805167ffffffffffffffff8111156155c75750505050506155fd565b8060208301013d85018111156155e2575050505050506155fd565b6155eb8261552c565b60208401016040528296505050505050505b90565b6156098161536e565b811461561457600080fd5b50565b61562081615380565b811461562b57600080fd5b50565b6156378161538c565b811461564257600080fd5b50565b61564e816153d8565b811461565957600080fd5b5056fea2646970667358221220619872828f8ead431bb95b9203e6783b261302af13dde8deb410d882f88e5e1f64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780637b630e011461005b5780638da5cb5b1461008b578063f2fde38b146100a9575b600080fd5b6100596100c5565b005b610075600480360381019061007091906106ea565b61014d565b6040516100829190610897565b60405180910390f35b610093610382565b6040516100a09190610897565b60405180910390f35b6100c360048036038101906100be91906106c1565b6103ab565b005b6100cd6104a3565b73ffffffffffffffffffffffffffffffffffffffff166100eb610382565b73ffffffffffffffffffffffffffffffffffffffff1614610141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013890610929565b60405180910390fd5b61014b60006104ab565b565b60006101576104a3565b73ffffffffffffffffffffffffffffffffffffffff16610175610382565b73ffffffffffffffffffffffffffffffffffffffff16146101cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c290610929565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561020557600080fd5b6000610232600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661056f565b90508073ffffffffffffffffffffffffffffffffffffffff16634cd88b7686866040518363ffffffff1660e01b815260040161026f9291906108b2565b600060405180830381600087803b15801561028957600080fd5b505af115801561029d573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b846040518263ffffffff1660e01b81526004016102da9190610897565b600060405180830381600087803b1580156102f457600080fd5b505af1158015610308573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16639435a587846040518263ffffffff1660e01b81526004016103459190610897565b600060405180830381600087803b15801561035f57600080fd5b505af1158015610373573d6000803e3d6000fd5b50505050809150509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103b36104a3565b73ffffffffffffffffffffffffffffffffffffffff166103d1610382565b73ffffffffffffffffffffffffffffffffffffffff1614610427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041e90610929565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e906108e9565b60405180910390fd5b6104a0816104ab565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063690610909565b60405180910390fd5b919050565b60006106576106528461097a565b610949565b90508281526020810184848401111561066f57600080fd5b61067a8482856109f8565b509392505050565b60008135905061069181610a7a565b92915050565b600082601f8301126106a857600080fd5b81356106b8848260208601610644565b91505092915050565b6000602082840312156106d357600080fd5b60006106e184828501610682565b91505092915050565b6000806000606084860312156106ff57600080fd5b600084013567ffffffffffffffff81111561071957600080fd5b61072586828701610697565b935050602084013567ffffffffffffffff81111561074257600080fd5b61074e86828701610697565b925050604061075f86828701610682565b9150509250925092565b610772816109c6565b82525050565b6000610783826109aa565b61078d81856109b5565b935061079d818560208601610a07565b6107a681610a69565b840191505092915050565b60006107be6026836109b5565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006108246016836109b5565b91507f455243313136373a20637265617465206661696c6564000000000000000000006000830152602082019050919050565b60006108646020836109b5565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506108ac6000830184610769565b92915050565b600060408201905081810360008301526108cc8185610778565b905081810360208301526108e08184610778565b90509392505050565b60006020820190508181036000830152610902816107b1565b9050919050565b6000602082019050818103600083015261092281610817565b9050919050565b6000602082019050818103600083015261094281610857565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156109705761096f610a3a565b5b8060405250919050565b600067ffffffffffffffff82111561099557610994610a3a565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006109d1826109d8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610a25578082015181840152602081019050610a0a565b83811115610a34576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610a83816109c6565b8114610a8e57600080fd5b5056fea26469706673582212208ca39ae7a361ca903e5a99fccbf5cd05a86477224e3373cc79a88281bdca39b164736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7435:25",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:260:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:74:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:41:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:49:25"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "110:14:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:65:25"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "191:5:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "184:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "184:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "184:21:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "214:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "229:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "236:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "225:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:16:25"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "218:3:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "260:3:25"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "265:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:16:25"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "274:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "253:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:25:25"
                  },
                  "nodeType": "YulIf",
                  "src": "250:2:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "328:3:25"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "333:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "338:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "304:23:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:41:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:41:25"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:25",
                "type": ""
              }
            ],
            "src": "7:344:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "409:87:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "419:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "441:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "428:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "419:5:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "484:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "457:26:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:33:25"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "387:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "395:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "403:5:25",
                "type": ""
              }
            ],
            "src": "357:139:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "578:211:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "627:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "636:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "639:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "629:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "629:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "629:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "606:6:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "614:4:25",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "602:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "602:17:25"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "621:3:25"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "598:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "598:27:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "591:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:35:25"
                  },
                  "nodeType": "YulIf",
                  "src": "588:2:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "652:34:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "679:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "666:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:20:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "656:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "695:88:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "756:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "764:4:25",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "752:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "752:17:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "771:6:25"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "779:3:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "704:47:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:79:25"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "695:5:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "556:6:25",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "564:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "572:5:25",
                "type": ""
              }
            ],
            "src": "516:273:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "861:196:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "907:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "916:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "919:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "909:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "909:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "909:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "882:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "891:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "878:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "878:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "903:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "874:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "874:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "871:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "933:117:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "948:15:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "962:1:25",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "952:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "977:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1012:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1023:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1008:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1008:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1032:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "987:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "977:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "831:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "842:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "854:6:25",
                "type": ""
              }
            ],
            "src": "795:262:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1183:658:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1229:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1238:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1241:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1231:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1231:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1231:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1204:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1213:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1200:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1200:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1225:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1196:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1196:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1193:2:25"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1255:220:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1270:45:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1301:9:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1312:1:25",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1297:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1297:17:25"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1284:12:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1284:31:25"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1274:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1362:16:25",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1371:1:25",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1374:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1364:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1364:12:25"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1364:12:25"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1334:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1342:18:25",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1331:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1331:30:25"
                      },
                      "nodeType": "YulIf",
                      "src": "1328:2:25"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1392:73:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1437:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1448:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1433:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1433:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1457:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1402:30:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1402:63:25"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1392:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1485:221:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1500:46:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1531:9:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1542:2:25",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1527:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1527:18:25"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1514:12:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1514:32:25"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1504:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1593:16:25",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1602:1:25",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1605:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1595:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1595:12:25"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1595:12:25"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1565:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1573:18:25",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1562:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1562:30:25"
                      },
                      "nodeType": "YulIf",
                      "src": "1559:2:25"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1623:73:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1668:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1679:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1664:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1664:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1688:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1633:30:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1633:63:25"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1623:6:25"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1716:118:25",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1731:16:25",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1745:2:25",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1735:6:25",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1761:63:25",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1796:9:25"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1807:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1792:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1792:22:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1816:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1771:20:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1771:53:25"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1761:6:25"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1137:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1148:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1160:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1168:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1176:6:25",
                "type": ""
              }
            ],
            "src": "1063:778:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1912:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1929:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1952:5:25"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1934:17:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1934:24:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1922:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1922:37:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1922:37:25"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1900:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1907:3:25",
                "type": ""
              }
            ],
            "src": "1847:118:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2063:272:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2073:53:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2120:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2087:32:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2087:39:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2077:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2135:78:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2201:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2206:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2142:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2142:71:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2135:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2248:5:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2255:4:25",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2244:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2244:16:25"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2262:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2267:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2222:21:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2222:52:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2222:52:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2283:46:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2294:3:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2321:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2299:21:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2299:29:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2290:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2290:39:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2283:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2044:5:25",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2051:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2059:3:25",
                "type": ""
              }
            ],
            "src": "1971:364:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2487:224:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2497:74:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2563:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2568:2:25",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2504:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2504:67:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2497:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2592:3:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2597:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2588:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2588:11:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2601:34:25",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2581:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2581:55:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2581:55:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2657:3:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2662:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2653:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2653:12:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2667:8:25",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2646:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2646:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2646:30:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2686:19:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2697:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2702:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2693:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2693:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2686:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2475:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2483:3:25",
                "type": ""
              }
            ],
            "src": "2341:370:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2863:174:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2873:74:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2939:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2944:2:25",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2880:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2880:67:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2873:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2968:3:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2973:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2964:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2964:11:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2977:24:25",
                        "type": "",
                        "value": "ERC1167: create failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2957:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2957:45:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2957:45:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3012:19:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3023:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3028:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3019:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3019:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3012:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2851:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2859:3:25",
                "type": ""
              }
            ],
            "src": "2717:320:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3189:184:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3199:74:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3265:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3270:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3206:58:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3206:67:25"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3199:3:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3294:3:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3299:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3290:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3290:11:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3303:34:25",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3283:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3283:55:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3283:55:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3348:19:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3359:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3364:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3355:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3355:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3348:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3177:3:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3185:3:25",
                "type": ""
              }
            ],
            "src": "3043:330:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3477:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3487:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3499:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3510:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3495:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3495:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3487:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3567:6:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3580:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3591:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3576:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3576:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3523:43:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3523:71:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3523:71:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3449:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3461:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3472:4:25",
                "type": ""
              }
            ],
            "src": "3379:222:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3773:348:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3783:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3795:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3806:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3791:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3791:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3783:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3830:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3841:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3826:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3826:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3849:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3855:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3845:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3845:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3819:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3819:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3819:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3875:86:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3947:6:25"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3956:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3883:63:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3883:78:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3875:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3982:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3993:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3978:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3978:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4002:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4008:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3998:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3998:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3971:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3971:48:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3971:48:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4028:86:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4100:6:25"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4109:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4036:63:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4036:78:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4028:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3737:9:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3749:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3757:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3768:4:25",
                "type": ""
              }
            ],
            "src": "3607:514:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4298:248:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4308:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4320:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4331:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4316:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4316:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4308:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4355:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4366:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4351:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4351:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4374:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4380:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4370:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4370:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4344:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4344:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4344:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4400:139:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4534:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4408:124:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4408:131:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4400:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4278:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4293:4:25",
                "type": ""
              }
            ],
            "src": "4127:419:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4723:248:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4733:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4745:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4756:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4741:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4741:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4733:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4780:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4791:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4776:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4776:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4799:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4805:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4795:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4795:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4769:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4769:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4769:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4825:139:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4959:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4833:124:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4833:131:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4825:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4703:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4718:4:25",
                "type": ""
              }
            ],
            "src": "4552:419:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5148:248:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5158:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5170:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5181:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5166:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5166:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5158:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5205:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5216:1:25",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5201:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5201:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5224:4:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5230:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5220:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5220:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5194:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5194:47:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5194:47:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5250:139:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5384:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5258:124:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5258:131:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5250:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5128:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5143:4:25",
                "type": ""
              }
            ],
            "src": "4977:419:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5442:243:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5452:19:25",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5468:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5462:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5462:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5452:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5480:35:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5502:6:25"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5510:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5498:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5498:17:25"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "5484:10:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5626:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5628:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5628:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5628:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5569:10:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5581:18:25",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5566:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5566:34:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5605:10:25"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5617:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5602:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5602:22:25"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "5563:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5563:62:25"
                  },
                  "nodeType": "YulIf",
                  "src": "5560:2:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5664:2:25",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "5668:10:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5657:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5657:22:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5657:22:25"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5426:4:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5435:6:25",
                "type": ""
              }
            ],
            "src": "5402:283:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5758:265:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5863:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5865:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5865:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5865:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5835:6:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5843:18:25",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5832:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5832:30:25"
                  },
                  "nodeType": "YulIf",
                  "src": "5829:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5915:41:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5931:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5939:4:25",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5927:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5927:17:25"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5950:4:25",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5946:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5946:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5923:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5923:33:25"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5915:4:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5993:23:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6005:4:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6011:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6001:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6001:15:25"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5993:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5742:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5753:4:25",
                "type": ""
              }
            ],
            "src": "5691:332:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6088:40:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6099:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6115:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6109:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6109:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6099:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6071:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6081:6:25",
                "type": ""
              }
            ],
            "src": "6029:99:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6230:73:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6247:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6252:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6240:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6240:19:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6240:19:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6268:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6287:3:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6292:4:25",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6283:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6283:14:25"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6268:11:25"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6202:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6207:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6218:11:25",
                "type": ""
              }
            ],
            "src": "6134:169:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6354:51:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6364:35:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6393:5:25"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6375:17:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6375:24:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6364:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6336:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6346:7:25",
                "type": ""
              }
            ],
            "src": "6309:96:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6456:81:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6466:65:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6481:5:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6488:42:25",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6477:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6477:54:25"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6466:7:25"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6438:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6448:7:25",
                "type": ""
              }
            ],
            "src": "6411:126:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6594:103:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "6617:3:25"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "6622:3:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6627:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "6604:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6604:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6604:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "6675:3:25"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6680:6:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6671:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6671:16:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6689:1:25",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6664:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6664:27:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6664:27:25"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6576:3:25",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6581:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6586:6:25",
                "type": ""
              }
            ],
            "src": "6543:154:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6752:258:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6762:10:25",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6771:1:25",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6766:1:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6831:63:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6856:3:25"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6861:1:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6852:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6852:11:25"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6875:3:25"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6880:1:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6871:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6871:11:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6865:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6865:18:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6845:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6845:39:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6845:39:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6792:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6795:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6789:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6789:13:25"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6803:19:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6805:15:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6814:1:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6817:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6810:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6810:10:25"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6805:1:25"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6785:3:25",
                    "statements": []
                  },
                  "src": "6781:113:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6928:76:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6978:3:25"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6983:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6974:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6974:16:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6992:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6967:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6967:27:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6967:27:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6909:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6912:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6906:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6906:13:25"
                  },
                  "nodeType": "YulIf",
                  "src": "6903:2:25"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6734:3:25",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6739:3:25",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6744:6:25",
                "type": ""
              }
            ],
            "src": "6703:307:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7044:152:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7061:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7064:77:25",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7054:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7054:88:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7054:88:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7158:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7161:4:25",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7151:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7151:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7151:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7182:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7185:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7175:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7175:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7175:15:25"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7016:180:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7250:54:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7260:38:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7278:5:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7285:2:25",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7274:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7274:14:25"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7294:2:25",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7290:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7290:7:25"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7270:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7270:28:25"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "7260:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7233:5:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "7243:6:25",
                "type": ""
              }
            ],
            "src": "7202:102:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7353:79:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7410:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7419:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7422:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7412:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7412:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7412:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7376:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7401:5:25"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7383:17:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7383:24:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7373:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7373:35:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7366:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7366:43:25"
                  },
                  "nodeType": "YulIf",
                  "src": "7363:2:25"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7346:5:25",
                "type": ""
              }
            ],
            "src": "7310:122:25"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n\n        mstore(add(pos, 0), \"ERC1167: create failed\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "187:604:21:-:0;;;267:79;;;;;;;;;;921:32:16;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;320:14:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;290:19;;:45;;;;;;;;;;;;;;;;;;187:604;;640:96:18;693:7;719:10;712:17;;640:96;:::o;2270:187:16:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;187:604:21:-;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "187:604:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:16;;;:::i;:::-;;356:432:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;356:432:21:-;482:7;1259:12:16;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;530:1:21::1;509:23;;:9;:23;;;;501:32;;;::::0;::::1;;543:13;559:33;572:19;;;;;;;;;;;559:12;:33::i;:::-;543:49;;611:5;602:26;;;629:8;639:17;602:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;676:5;667:33;;;701:9;667:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;730:5;721:27;;;749:9;721:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;776:5;769:12;;;356:432:::0;;;;;:::o;1036:85:16:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1918:198::-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:18:-;693:7;719:10;712:17;;640:96;:::o;2270:187:16:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;958:515:17:-;1015:16;1083:4;1077:11;1113:66;1108:3;1101:79;1226:14;1220:4;1216:25;1209:4;1204:3;1200:14;1193:49;1278:66;1271:4;1266:3;1262:14;1255:90;1385:4;1380:3;1377:1;1370:20;1358:32;;1052:348;1437:1;1417:22;;:8;:22;;;;1409:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;958:515;;;:::o;7:344:25:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:139::-;;441:6;428:20;419:29;;457:33;484:5;457:33;:::i;:::-;409:87;;;;:::o;516:273::-;;621:3;614:4;606:6;602:17;598:27;588:2;;639:1;636;629:12;588:2;679:6;666:20;704:79;779:3;771:6;764:4;756:6;752:17;704:79;:::i;:::-;695:88;;578:211;;;;;:::o;795:262::-;;903:2;891:9;882:7;878:23;874:32;871:2;;;919:1;916;909:12;871:2;962:1;987:53;1032:7;1023:6;1012:9;1008:22;987:53;:::i;:::-;977:63;;933:117;861:196;;;;:::o;1063:778::-;;;;1225:2;1213:9;1204:7;1200:23;1196:32;1193:2;;;1241:1;1238;1231:12;1193:2;1312:1;1301:9;1297:17;1284:31;1342:18;1334:6;1331:30;1328:2;;;1374:1;1371;1364:12;1328:2;1402:63;1457:7;1448:6;1437:9;1433:22;1402:63;:::i;:::-;1392:73;;1255:220;1542:2;1531:9;1527:18;1514:32;1573:18;1565:6;1562:30;1559:2;;;1605:1;1602;1595:12;1559:2;1633:63;1688:7;1679:6;1668:9;1664:22;1633:63;:::i;:::-;1623:73;;1485:221;1745:2;1771:53;1816:7;1807:6;1796:9;1792:22;1771:53;:::i;:::-;1761:63;;1716:118;1183:658;;;;;:::o;1847:118::-;1934:24;1952:5;1934:24;:::i;:::-;1929:3;1922:37;1912:53;;:::o;1971:364::-;;2087:39;2120:5;2087:39;:::i;:::-;2142:71;2206:6;2201:3;2142:71;:::i;:::-;2135:78;;2222:52;2267:6;2262:3;2255:4;2248:5;2244:16;2222:52;:::i;:::-;2299:29;2321:6;2299:29;:::i;:::-;2294:3;2290:39;2283:46;;2063:272;;;;;:::o;2341:370::-;;2504:67;2568:2;2563:3;2504:67;:::i;:::-;2497:74;;2601:34;2597:1;2592:3;2588:11;2581:55;2667:8;2662:2;2657:3;2653:12;2646:30;2702:2;2697:3;2693:12;2686:19;;2487:224;;;:::o;2717:320::-;;2880:67;2944:2;2939:3;2880:67;:::i;:::-;2873:74;;2977:24;2973:1;2968:3;2964:11;2957:45;3028:2;3023:3;3019:12;3012:19;;2863:174;;;:::o;3043:330::-;;3206:67;3270:2;3265:3;3206:67;:::i;:::-;3199:74;;3303:34;3299:1;3294:3;3290:11;3283:55;3364:2;3359:3;3355:12;3348:19;;3189:184;;;:::o;3379:222::-;;3510:2;3499:9;3495:18;3487:26;;3523:71;3591:1;3580:9;3576:17;3567:6;3523:71;:::i;:::-;3477:124;;;;:::o;3607:514::-;;3806:2;3795:9;3791:18;3783:26;;3855:9;3849:4;3845:20;3841:1;3830:9;3826:17;3819:47;3883:78;3956:4;3947:6;3883:78;:::i;:::-;3875:86;;4008:9;4002:4;3998:20;3993:2;3982:9;3978:18;3971:48;4036:78;4109:4;4100:6;4036:78;:::i;:::-;4028:86;;3773:348;;;;;:::o;4127:419::-;;4331:2;4320:9;4316:18;4308:26;;4380:9;4374:4;4370:20;4366:1;4355:9;4351:17;4344:47;4408:131;4534:4;4408:131;:::i;:::-;4400:139;;4298:248;;;:::o;4552:419::-;;4756:2;4745:9;4741:18;4733:26;;4805:9;4799:4;4795:20;4791:1;4780:9;4776:17;4769:47;4833:131;4959:4;4833:131;:::i;:::-;4825:139;;4723:248;;;:::o;4977:419::-;;5181:2;5170:9;5166:18;5158:26;;5230:9;5224:4;5220:20;5216:1;5205:9;5201:17;5194:47;5258:131;5384:4;5258:131;:::i;:::-;5250:139;;5148:248;;;:::o;5402:283::-;;5468:2;5462:9;5452:19;;5510:4;5502:6;5498:17;5617:6;5605:10;5602:22;5581:18;5569:10;5566:34;5563:62;5560:2;;;5628:18;;:::i;:::-;5560:2;5668:10;5664:2;5657:22;5442:243;;;;:::o;5691:332::-;;5843:18;5835:6;5832:30;5829:2;;;5865:18;;:::i;:::-;5829:2;5950:4;5946:9;5939:4;5931:6;5927:17;5923:33;5915:41;;6011:4;6005;6001:15;5993:23;;5758:265;;;:::o;6029:99::-;;6115:5;6109:12;6099:22;;6088:40;;;:::o;6134:169::-;;6252:6;6247:3;6240:19;6292:4;6287:3;6283:14;6268:29;;6230:73;;;;:::o;6309:96::-;;6375:24;6393:5;6375:24;:::i;:::-;6364:35;;6354:51;;;:::o;6411:126::-;;6488:42;6481:5;6477:54;6466:65;;6456:81;;;:::o;6543:154::-;6627:6;6622:3;6617;6604:30;6689:1;6680:6;6675:3;6671:16;6664:27;6594:103;;;:::o;6703:307::-;6771:1;6781:113;6795:6;6792:1;6789:13;6781:113;;;6880:1;6875:3;6871:11;6865:18;6861:1;6856:3;6852:11;6845:39;6817:2;6814:1;6810:10;6805:15;;6781:113;;;6912:6;6909:1;6906:13;6903:2;;;6992:1;6983:6;6978:3;6974:16;6967:27;6903:2;6752:258;;;;:::o;7016:180::-;7064:77;7061:1;7054:88;7161:4;7158:1;7151:15;7185:4;7182:1;7175:15;7202:102;;7294:2;7290:7;7285:2;7278:5;7274:14;7270:28;7260:38;;7250:54;;;:::o;7310:122::-;7383:24;7401:5;7383:24;:::i;:::-;7376:5;7373:35;7363:2;;7422:1;7419;7412:12;7363:2;7353:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./Onec1155.sol\";\n\ncontract Factory1155 is Ownable {\n\n    address private tokenImplementation;\n    constructor(){\n        tokenImplementation = address(new Onec1155());    \n    }\n    \n    function createOnec1155(string memory _baseURI,string memory _contractMetadata,address _newOwner) external onlyOwner returns (address) {\n        require(_newOwner != address(0));\n        address clone = Clones.clone(tokenImplementation);\n        Onec1155(clone).initialize(_baseURI, _contractMetadata);\n        Onec1155(clone).transferOwnership(_newOwner);\n        Onec1155(clone).transferOwn(_newOwner);\n        return clone;\n    }\n\n}",
  "sourcePath": "/Users/hrishabhsharma/Projects/core-contract/contracts/Onec1155Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/Onec1155Factory.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        2821
      ],
      "Clones": [
        3311
      ],
      "Context": [
        3333
      ],
      "ContextUpgradeable": [
        2865
      ],
      "ERC1155Upgradeable": [
        1391
      ],
      "ERC165Upgradeable": [
        3114
      ],
      "Factory1155": [
        4085
      ],
      "IERC1155MetadataURIUpgradeable": [
        1569
      ],
      "IERC1155ReceiverUpgradeable": [
        1432
      ],
      "IERC1155Upgradeable": [
        1554
      ],
      "IERC165Upgradeable": [
        3126
      ],
      "Initializable": [
        170
      ],
      "Onec1155": [
        4007
      ],
      "Ownable": [
        3231
      ],
      "OwnableUpgradeable": [
        124
      ],
      "PausableUpgradeable": [
        283
      ],
      "StringsNative": [
        4617
      ]
    },
    "id": 4086,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4009,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:21"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "id": 4010,
        "nodeType": "ImportDirective",
        "scope": 4086,
        "sourceUnit": 3312,
        "src": "57:50:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4011,
        "nodeType": "ImportDirective",
        "scope": 4086,
        "sourceUnit": 3232,
        "src": "108:52:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Onec1155.sol",
        "file": "./Onec1155.sol",
        "id": 4012,
        "nodeType": "ImportDirective",
        "scope": 4086,
        "sourceUnit": 4008,
        "src": "161:24:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4013,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3231,
              "src": "211:7:21"
            },
            "id": 4014,
            "nodeType": "InheritanceSpecifier",
            "src": "211:7:21"
          }
        ],
        "contractDependencies": [
          3231,
          3333,
          4007
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4085,
        "linearizedBaseContracts": [
          4085,
          3231,
          3333
        ],
        "name": "Factory1155",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4016,
            "mutability": "mutable",
            "name": "tokenImplementation",
            "nodeType": "VariableDeclaration",
            "scope": 4085,
            "src": "226:35:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4015,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "226:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 4029,
              "nodeType": "Block",
              "src": "280:66:21",
              "statements": [
                {
                  "expression": {
                    "id": 4027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4019,
                      "name": "tokenImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4016,
                      "src": "290:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "320:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Onec1155_$4007_$",
                              "typeString": "function () returns (contract Onec1155)"
                            },
                            "typeName": {
                              "id": 4023,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4022,
                                "name": "Onec1155",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4007,
                                "src": "324:8:21"
                              },
                              "referencedDeclaration": 4007,
                              "src": "324:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Onec1155_$4007",
                                "typeString": "contract Onec1155"
                              }
                            }
                          },
                          "id": 4025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "320:14:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Onec1155_$4007",
                            "typeString": "contract Onec1155"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Onec1155_$4007",
                            "typeString": "contract Onec1155"
                          }
                        ],
                        "id": 4021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "312:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4020,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "312:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "312:23:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "290:45:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4028,
                  "nodeType": "ExpressionStatement",
                  "src": "290:45:21"
                }
              ]
            },
            "id": 4030,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:2:21"
            },
            "returnParameters": {
              "id": 4018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:0:21"
            },
            "scope": 4085,
            "src": "267:79:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4083,
              "nodeType": "Block",
              "src": "491:297:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4044,
                          "name": "_newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4036,
                          "src": "509:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "530:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "522:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4045,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "522:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "522:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "509:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "501:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "501:32:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4051,
                  "nodeType": "ExpressionStatement",
                  "src": "501:32:21"
                },
                {
                  "assignments": [
                    4053
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4053,
                      "mutability": "mutable",
                      "name": "clone",
                      "nodeType": "VariableDeclaration",
                      "scope": 4083,
                      "src": "543:13:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4052,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "543:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4058,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4056,
                        "name": "tokenImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4016,
                        "src": "572:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4054,
                        "name": "Clones",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3311,
                        "src": "559:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Clones_$3311_$",
                          "typeString": "type(library Clones)"
                        }
                      },
                      "id": 4055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "clone",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3254,
                      "src": "559:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) returns (address)"
                      }
                    },
                    "id": 4057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:33:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "543:49:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4063,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4032,
                        "src": "629:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4064,
                        "name": "_contractMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4034,
                        "src": "639:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4060,
                            "name": "clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4053,
                            "src": "611:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4059,
                          "name": "Onec1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4007,
                          "src": "602:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Onec1155_$4007_$",
                            "typeString": "type(contract Onec1155)"
                          }
                        },
                        "id": 4061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "602:15:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Onec1155_$4007",
                          "typeString": "contract Onec1155"
                        }
                      },
                      "id": 4062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3437,
                      "src": "602:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) external"
                      }
                    },
                    "id": 4065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "602:55:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4066,
                  "nodeType": "ExpressionStatement",
                  "src": "602:55:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4071,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4036,
                        "src": "701:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4068,
                            "name": "clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4053,
                            "src": "676:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4067,
                          "name": "Onec1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4007,
                          "src": "667:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Onec1155_$4007_$",
                            "typeString": "type(contract Onec1155)"
                          }
                        },
                        "id": 4069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "667:15:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Onec1155_$4007",
                          "typeString": "contract Onec1155"
                        }
                      },
                      "id": 4070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 100,
                      "src": "667:33:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:44:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4073,
                  "nodeType": "ExpressionStatement",
                  "src": "667:44:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4078,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4036,
                        "src": "749:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4075,
                            "name": "clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4053,
                            "src": "730:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4074,
                          "name": "Onec1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4007,
                          "src": "721:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Onec1155_$4007_$",
                            "typeString": "type(contract Onec1155)"
                          }
                        },
                        "id": 4076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "721:15:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Onec1155_$4007",
                          "typeString": "contract Onec1155"
                        }
                      },
                      "id": 4077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3451,
                      "src": "721:27:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "721:38:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4080,
                  "nodeType": "ExpressionStatement",
                  "src": "721:38:21"
                },
                {
                  "expression": {
                    "id": 4081,
                    "name": "clone",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4053,
                    "src": "776:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4042,
                  "id": 4082,
                  "nodeType": "Return",
                  "src": "769:12:21"
                }
              ]
            },
            "functionSelector": "7b630e01",
            "id": 4084,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4039,
                "modifierName": {
                  "id": 4038,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3173,
                  "src": "463:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "463:9:21"
              }
            ],
            "name": "createOnec1155",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4032,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 4084,
                  "src": "380:22:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4031,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4034,
                  "mutability": "mutable",
                  "name": "_contractMetadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 4084,
                  "src": "403:31:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4033,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4036,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4084,
                  "src": "435:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "379:74:21"
            },
            "returnParameters": {
              "id": 4042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4041,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4084,
                  "src": "482:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "481:9:21"
            },
            "scope": 4085,
            "src": "356:432:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4086,
        "src": "187:604:21"
      }
    ],
    "src": "32:759:21"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Onec1155Factory.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        2821
      ],
      "Clones": [
        3311
      ],
      "Context": [
        3333
      ],
      "ContextUpgradeable": [
        2865
      ],
      "ERC1155Upgradeable": [
        1391
      ],
      "ERC165Upgradeable": [
        3114
      ],
      "Factory1155": [
        4085
      ],
      "IERC1155MetadataURIUpgradeable": [
        1569
      ],
      "IERC1155ReceiverUpgradeable": [
        1432
      ],
      "IERC1155Upgradeable": [
        1554
      ],
      "IERC165Upgradeable": [
        3126
      ],
      "Initializable": [
        170
      ],
      "Onec1155": [
        4007
      ],
      "Ownable": [
        3231
      ],
      "OwnableUpgradeable": [
        124
      ],
      "PausableUpgradeable": [
        283
      ],
      "StringsNative": [
        4617
      ]
    },
    "id": 4086,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4009,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:21"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "id": 4010,
        "nodeType": "ImportDirective",
        "scope": 4086,
        "sourceUnit": 3312,
        "src": "57:50:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4011,
        "nodeType": "ImportDirective",
        "scope": 4086,
        "sourceUnit": 3232,
        "src": "108:52:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Onec1155.sol",
        "file": "./Onec1155.sol",
        "id": 4012,
        "nodeType": "ImportDirective",
        "scope": 4086,
        "sourceUnit": 4008,
        "src": "161:24:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4013,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3231,
              "src": "211:7:21"
            },
            "id": 4014,
            "nodeType": "InheritanceSpecifier",
            "src": "211:7:21"
          }
        ],
        "contractDependencies": [
          3231,
          3333,
          4007
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4085,
        "linearizedBaseContracts": [
          4085,
          3231,
          3333
        ],
        "name": "Factory1155",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4016,
            "mutability": "mutable",
            "name": "tokenImplementation",
            "nodeType": "VariableDeclaration",
            "scope": 4085,
            "src": "226:35:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4015,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "226:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 4029,
              "nodeType": "Block",
              "src": "280:66:21",
              "statements": [
                {
                  "expression": {
                    "id": 4027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4019,
                      "name": "tokenImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4016,
                      "src": "290:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "320:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Onec1155_$4007_$",
                              "typeString": "function () returns (contract Onec1155)"
                            },
                            "typeName": {
                              "id": 4023,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4022,
                                "name": "Onec1155",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4007,
                                "src": "324:8:21"
                              },
                              "referencedDeclaration": 4007,
                              "src": "324:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Onec1155_$4007",
                                "typeString": "contract Onec1155"
                              }
                            }
                          },
                          "id": 4025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "320:14:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Onec1155_$4007",
                            "typeString": "contract Onec1155"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Onec1155_$4007",
                            "typeString": "contract Onec1155"
                          }
                        ],
                        "id": 4021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "312:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4020,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "312:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "312:23:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "290:45:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4028,
                  "nodeType": "ExpressionStatement",
                  "src": "290:45:21"
                }
              ]
            },
            "id": 4030,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:2:21"
            },
            "returnParameters": {
              "id": 4018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:0:21"
            },
            "scope": 4085,
            "src": "267:79:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4083,
              "nodeType": "Block",
              "src": "491:297:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4044,
                          "name": "_newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4036,
                          "src": "509:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "530:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "522:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4045,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "522:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "522:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "509:23:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "501:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "501:32:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4051,
                  "nodeType": "ExpressionStatement",
                  "src": "501:32:21"
                },
                {
                  "assignments": [
                    4053
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4053,
                      "mutability": "mutable",
                      "name": "clone",
                      "nodeType": "VariableDeclaration",
                      "scope": 4083,
                      "src": "543:13:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4052,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "543:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4058,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4056,
                        "name": "tokenImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4016,
                        "src": "572:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4054,
                        "name": "Clones",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3311,
                        "src": "559:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Clones_$3311_$",
                          "typeString": "type(library Clones)"
                        }
                      },
                      "id": 4055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "clone",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3254,
                      "src": "559:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) returns (address)"
                      }
                    },
                    "id": 4057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:33:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "543:49:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4063,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4032,
                        "src": "629:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4064,
                        "name": "_contractMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4034,
                        "src": "639:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4060,
                            "name": "clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4053,
                            "src": "611:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4059,
                          "name": "Onec1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4007,
                          "src": "602:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Onec1155_$4007_$",
                            "typeString": "type(contract Onec1155)"
                          }
                        },
                        "id": 4061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "602:15:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Onec1155_$4007",
                          "typeString": "contract Onec1155"
                        }
                      },
                      "id": 4062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3437,
                      "src": "602:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) external"
                      }
                    },
                    "id": 4065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "602:55:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4066,
                  "nodeType": "ExpressionStatement",
                  "src": "602:55:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4071,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4036,
                        "src": "701:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4068,
                            "name": "clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4053,
                            "src": "676:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4067,
                          "name": "Onec1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4007,
                          "src": "667:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Onec1155_$4007_$",
                            "typeString": "type(contract Onec1155)"
                          }
                        },
                        "id": 4069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "667:15:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Onec1155_$4007",
                          "typeString": "contract Onec1155"
                        }
                      },
                      "id": 4070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 100,
                      "src": "667:33:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:44:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4073,
                  "nodeType": "ExpressionStatement",
                  "src": "667:44:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4078,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4036,
                        "src": "749:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4075,
                            "name": "clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4053,
                            "src": "730:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4074,
                          "name": "Onec1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4007,
                          "src": "721:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Onec1155_$4007_$",
                            "typeString": "type(contract Onec1155)"
                          }
                        },
                        "id": 4076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "721:15:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Onec1155_$4007",
                          "typeString": "contract Onec1155"
                        }
                      },
                      "id": 4077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3451,
                      "src": "721:27:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "721:38:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4080,
                  "nodeType": "ExpressionStatement",
                  "src": "721:38:21"
                },
                {
                  "expression": {
                    "id": 4081,
                    "name": "clone",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4053,
                    "src": "776:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4042,
                  "id": 4082,
                  "nodeType": "Return",
                  "src": "769:12:21"
                }
              ]
            },
            "functionSelector": "7b630e01",
            "id": 4084,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4039,
                "modifierName": {
                  "id": 4038,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3173,
                  "src": "463:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "463:9:21"
              }
            ],
            "name": "createOnec1155",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4032,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 4084,
                  "src": "380:22:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4031,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4034,
                  "mutability": "mutable",
                  "name": "_contractMetadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 4084,
                  "src": "403:31:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4033,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4036,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4084,
                  "src": "435:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "379:74:21"
            },
            "returnParameters": {
              "id": 4042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4041,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4084,
                  "src": "482:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "481:9:21"
            },
            "scope": 4085,
            "src": "356:432:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4086,
        "src": "187:604:21"
      }
    ],
    "src": "32:759:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-27T05:52:55.528Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}